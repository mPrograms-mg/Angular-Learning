{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction DiretivePracticeComponent_h2_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Secret Password like: tuna\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DiretivePracticeComponent {\n  constructor() {\n    this.isSecretTxt = true;\n    this.logValue = [];\n  }\n  toggleLogValue() {\n    this.logValue.push(this.logValue.length + 1);\n    console.log(this.logValue);\n  }\n  static #_ = this.ɵfac = function DiretivePracticeComponent_Factory(t) {\n    return new (t || DiretivePracticeComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DiretivePracticeComponent,\n    selectors: [[\"app-diretive-practice\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\"]],\n    template: function DiretivePracticeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"diretive-practice works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function DiretivePracticeComponent_Template_button_click_2_listener() {\n          ctx.isSecretTxt = !ctx.isSecretTxt;\n          return ctx.toggleLogValue();\n        });\n        i0.ɵɵtext(3, \"Display Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DiretivePracticeComponent_h2_4_Template, 2, 0, \"h2\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSecretTxt);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","DiretivePracticeComponent","constructor","isSecretTxt","logValue","toggleLogValue","push","length","console","log","_","_2","selectors","decls","vars","consts","template","DiretivePracticeComponent_Template","rf","ctx","ɵɵlistener","DiretivePracticeComponent_Template_button_click_2_listener","ɵɵtemplate","DiretivePracticeComponent_h2_4_Template","ɵɵadvance","ɵɵproperty"],"sources":["/Users/maheshk/Developer/Angular/Angular-Learning/myFirstApp/src/app/diretive-practice/diretive-practice.component.ts","/Users/maheshk/Developer/Angular/Angular-Learning/myFirstApp/src/app/diretive-practice/diretive-practice.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-diretive-practice',\n  templateUrl: './diretive-practice.component.html',\n  styleUrls: ['./diretive-practice.component.css'],\n})\nexport class DiretivePracticeComponent {\n  isSecretTxt = true;\n  logValue = [];\n\n  toggleLogValue() {\n    this.logValue.push(this.logValue.length + 1);\n    console.log(this.logValue);\n  }\n}\n","<h4>diretive-practice works!</h4>\n<button class=\"btn btn-primary\" (click)=\"isSecretTxt = !isSecretTxt; toggleLogValue()\">Display Details</button>\n<h2 *ngIf=\"isSecretTxt\">Secret Password like: tuna</h2>"],"mappings":";;;;ICEAA,EAAA,CAAAC,cAAA,SAAwB;IAAAD,EAAA,CAAAE,MAAA,iCAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;ADKvD,OAAM,MAAOC,yBAAyB;EALtCC,YAAA;IAME,KAAAC,WAAW,GAAG,IAAI;IAClB,KAAAC,QAAQ,GAAG,EAAE;;EAEbC,cAAcA,CAAA;IACZ,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACF,QAAQ,CAACG,MAAM,GAAG,CAAC,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,CAAC;EAC5B;EAAC,QAAAM,CAAA,G;qBAPUT,yBAAyB;EAAA;EAAA,QAAAU,EAAA,G;UAAzBV,yBAAyB;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPtCrB,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,+BAAwB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACjCH,EAAA,CAAAC,cAAA,gBAAuF;QAAvDD,EAAA,CAAAuB,UAAA,mBAAAC,2DAAA;UAAAF,GAAA,CAAAhB,WAAA,IAAAgB,GAAA,CAAAhB,WAAA;UAAA,OAAqCgB,GAAA,CAAAd,cAAA,EAAgB;QAAA,EAAC;QAACR,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC/GH,EAAA,CAAAyB,UAAA,IAAAC,uCAAA,gBAAuD;;;QAAlD1B,EAAA,CAAA2B,SAAA,GAAiB;QAAjB3B,EAAA,CAAA4B,UAAA,SAAAN,GAAA,CAAAhB,WAAA,CAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}